name: CI

on:
  push:
    branches: [ main ]
    tags: ['v*.*.*']
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_binaries:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19
    
    - name: Build linux arm
      run: env GOOS=linux GOARCH=arm CGO_ENABLED=0 go build -o build/digitec-daily-bot-arm
    
    - name: Build linux 64
      run: env GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o build/digitec-daily-bot-amd64

    - name: Upload Binaries
      uses: actions/upload-artifact@v1
      with:
        name: bins
        path: build/

    - name: Set env
      if: startsWith(github.ref, 'refs/tags/')
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - uses: "marvinpinto/action-automatic-releases@latest"
      if: startsWith(github.ref, 'refs/tags/')
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          build/digitec-daily-bot-arm
          build/digitec-daily-bot-amd64
  
  build-and-push-image:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}